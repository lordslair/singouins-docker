openapi: 3.0.0
info:
  description: ''
  version: 0.0.1
  title: S&P Internal API
  contact: {}
paths:
  /internal/creature:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature ADD request
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalCreatureCreateBody'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureProfileResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}:
    delete:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature DEL request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature profile request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureProfileResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/auction/{itemid}:
    delete:
      tags:
        - '/internal : Internal requests'
      summary: Internal Auction DEL request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: itemid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Auction GET request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: itemid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Auction ADD request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: itemid
          schema:
            type: integer
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 300
                price:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 100
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
    post:
      tags:
        - '/internal : Internal requests'
      summary: Internal Auction BUY request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: itemid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/auctions:
    post:
      tags:
        - '/internal : Internal requests'
      summary: Internal Auction SEARCH request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                metaid:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 14
                  required: true
                metatype:
                  schema:
                    type: string
                    enum: [armor, weapon]
                    nullable: false
                  required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/cd/{skill_name}:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature ADD CD request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: skill_name
          schema:
            type: string
            example: 'Bloodstrike'
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 300
                extra:
                  type: object
                  properties:
                    extrakey:
                      type: string
                      nullable: true
                      example: 'extravalue'
                  nullable: true
                source:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 300
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureCdsResponse'
      security:
        - internal_token: []
    delete:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature DEL CD request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: skill_name
          schema:
            type: string
            example: 'Bloodstrike'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature GET CD request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: skill_name
          schema:
            type: string
            example: 'Bloodstrike'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureCdResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/cds:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature CDs request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureCdsResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/context:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Context request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureResolverContextResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/effect/{effect_name}:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature ADD Effect request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: effect_name
          schema:
            type: string
            example: 'EffectName'
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 300
                extra:
                  type: object
                  properties:
                    extrakey:
                      type: string
                      nullable: true
                      example: 'extravalue'
                  nullable: true
                source:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 300
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureEffectsResponse'
      security:
        - internal_token: []
    delete:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature DEL Effect request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: effect_name
          schema:
            type: string
            example: 'EffectName'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature GET Effect request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: effect_name
          schema:
            type: string
            example: 'EffectName'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureEffectResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/effects:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature GET Effects request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureEffectsResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/equipment:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Equipment request (Items in slots)
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureEquipmentResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/equipment/{itemid}/ammo/{operation}/{count}:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Equipment request (Items in slots)
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: itemid
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
        - in: path
          name: operation
          schema:
            type: string
            enum: [add, consume]
            nullable: false
          required: true
        - in: path
          name: count
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureItemResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/inventory:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Inventory request (Items in bags)
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/highscore:
    post:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature HighScore request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureHighScoreResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/kill/{victimid}:
    post:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature KILL request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
        - in: path
          name: victimid
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureProfileResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/pa:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature PA request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreaturePaResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/pa/consume/{redpa}/{bluepa}:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature PA request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
            nullable: false
          required: true
        - in: path
          name: redpa
          schema:
            type: integer
            nullable: false
            minimum: 0
            maximum: 16
          required: true
        - in: path
          name: bluepa
          schema:
            type: integer
            nullable: false
            minimum: 0
            maximum: 16
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreaturePaResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/pa/reset:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature PA reset request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/stats:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Stats request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureStatsResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/stats/hp/{operation}/{count}:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Stats operation (HP)
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
        - in: path
          name: operation
          schema:
            type: string
            enum: [add, consume]
            nullable: false
          required: true
        - in: path
          name: count
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureStatsResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/status/{status_name}:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature ADD Status request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
            nullable: false
          required: true
        - in: path
          name: status_name
          schema:
            type: string
            nullable: false
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 300
                extra:
                  type: object
                  properties:
                    extrakey:
                      type: string
                      nullable: true
                      example: 'extravalue'
                  nullable: true
                source:
                  type: integer
                  nullable: false
                  minimum: 1
                  example: 300
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureStatusesResponse'
      security:
        - internal_token: []
    delete:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature DEL Status request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: status_name
          schema:
            type: string
            nullable: false
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature GET Status request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
        - in: path
          name: status_name
          schema:
            type: string
            nullable: false
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureStatusResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/statuses:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature GET ALL Status request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureStatusesResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/view:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature View request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureViewResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/wallet:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Wallet request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureWalletResponse'
      security:
        - internal_token: []
  /internal/creature/{creatureid}/wallet/{caliber}/{operation}/{count}:
    put:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature Wallet request
      parameters:
        - in: path
          name: creatureid
          schema:
            type: integer
            nullable: false
          required: true
        - in: path
          name: caliber
          schema:
            type: string
            enum: ['cal22','cal223','cal311','cal50','cal55','shell','bolt','arrow']
            nullable: false
          required: true
        - in: path
          name: operation
          schema:
            type: string
            enum: [add, consume]
            nullable: false
          required: true
        - in: path
          name: count
          schema:
            type: integer
            nullable: false
            minimum: 1
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureWalletResponse'
      security:
        - internal_token: []
  /internal/creatures:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creatures request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreaturesResponse'
      security:
        - internal_token: []
  /internal/discord/link:
    post:
      tags:
        - '/internal : Internal requests'
      summary: User/Discord association request
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                discordname:
                  type: string
                  pattern: '^.{3,32}#[0-9]{4}$' # regex for discord username
                  example: 'DiscordName#1234'
                  nullable: false
                usermail:
                  type: string
                  format: email
                  nullable: false
      responses:
        '200':
          description: OK - User/Discord associated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalUserResponse'
        '400':
          description: KO - Malformed JSON
      security:
        - internal_token: []
  /internal/discord/creature:
    post:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creature access request
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                discordname:
                  type: string
                  pattern: '^.{3,32}#[0-9]{4}$' # regex for discord username
                  example: 'DiscordName#1234'
                  nullable: false
                creatureid:
                  type: integer
                  minimum: 1
                  nullable: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalDiscordCreatureResponse'
      security:
        - internal_token: []
  /internal/discord/creatures:
    post:
      tags:
        - '/internal : Internal requests'
      summary: Internal Creatures request
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                discordname:
                  type: string
                  pattern: '^.{3,32}#[0-9]{4}$' # regex for discord username
                  example: 'DiscordName#1234'
                  nullable: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreaturesResponse'
      security:
        - internal_token: []
  /internal/discord/user:
    post:
      tags:
        - '/internal : Internal requests'
      summary: User information request
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                discordname:
                  type: string
                  pattern: '^.{3,32}#[0-9]{4}$' # regex for discord username
                  example: 'DiscordName#1234'
                  nullable: false
      responses:
        '200':
          description: OK - User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalUserResponse'
        '400':
          description: KO - Malformed JSON
      security:
        - internal_token: []
  /internal/korp:
    post:
      tags:
        - '/internal : Internal requests'
      summary: Korp information request (one)
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalKorp'
      responses:
        '200':
          description: OK - Korp found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalKorpResponse'
        '400':
          description: KO - Malformed JSON
      security:
        - internal_token: []
  /internal/korps:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Korps information request (all)
      responses:
        '200':
          description: OK - Korps found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalKorpsResponse'
      security:
        - internal_token: []
  /internal/squad:
    post:
      tags:
        - '/internal : Internal requests'
      summary: Squad information request (one)
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalSquad'
      responses:
        '200':
          description: OK - Squad found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalSquadResponse'
        '400':
          description: KO - Malformed JSON
      security:
        - internal_token: []
  /internal/squads:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Squads information request (all)
      responses:
        '200':
          description: OK - Squads found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalSquadsResponse'
        '400':
          description: KO - Malformed JSON
      security:
        - internal_token: []
  /internal/up:
    get:
      tags:
        - '/internal : Internal requests'
      summary: Internal UP request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - internal_token: []

  /auth/register:
    post:
      tags:
        - '/auth: Authentificaton Requests'
      summary: Register a new user
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegisterPostBody'
      responses:
        '201':
          description: OK - User registered | Registration mail sent
        '206':
          description: OK - User registered | Registration mail not sent
        '400':
          description: KO - Missing information in request
        '401':
          description: KO - Bad information in request
  /auth/confirm/{token}:
    post:
      tags:
        - '/auth: Authentificaton Requests'
      summary: Conirm a new user
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegisterPostBody'
      responses:
        '201':
          description: OK - User confirmed
        '498':
          description: KO - Token expired
  /auth/login:
    post:
      tags:
        - '/auth: Authentificaton Requests'
      summary: Returns access_token & refresh_token
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginPostBody'
      responses:
        '200':
          description: OK - User logged in
        '400':
          description: KO - Missing information in request
        '401':
          description: KO - Bad information in request
  /auth/refresh:
    post:
      tags:
        - '/auth: Authentificaton Requests'
      summary: Returns new access_token from refresh_token
      security:
        - refresh_token: []
      responses:
        '200':
          description: OK
  /auth/infos:
    get:
      tags:
        - '/auth: Authentificaton Requests'
      summary: Get informations from an authenticated user
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /auth/delete/{username}:
    delete:
      tags:
        - '/auth: Authentificaton Requests'
      summary: Permanently delete a PC from DB
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK - User deleted
        '400':
          description: KO - Missing information in request
        '404':
          description: KO - User not found

  /mypc:
    post:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Create a new PC for logged in user
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PcCreateBody'
      security:
        - access_token: []
      responses:
        '201':
          description: OK - PC created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: KO - Missing information in request
        '409':
          description: KO - PC already exists
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC list belonging to logged in user
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}:
    delete:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Delete a PC
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK - PC deleted
  /mypc/{pcid}/cds:
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC CDs
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - CDs found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureCdsResponse'
  /mypc/{pcid}/action/reload/{weaponid}:
    post:
      tags:
        - '/mypc/{pcid}/action: Standard Requests'
      summary: Reload a Weapon
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
        - in: path
          name: weaponid
          schema:
            type: integer
            example: 24
          required: true
      responses:
        '200':
          description: OK - Weapon reloaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureActionReloadResponse'
  /mypc/{pcid}/action/unload/{weaponid}:
    post:
      tags:
        - '/mypc/{pcid}/action: Standard Requests'
      summary: Unload a Weapon
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
        - in: path
          name: weaponid
          schema:
            type: integer
            example: 24
          required: true
      responses:
        '200':
          description: OK - Weapon unloaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureActionUnloadResponse'
  /mypc/{pcid}/action/resolver/context:
    post:
      tags:
        - '/mypc/{pcid}/action: Resolver Requests'
      summary: Get Resolver Context
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - Context found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureResolverContextResponse'
  /mypc/{pcid}/action/resolver/move:
    post:
      tags:
        - '/mypc/{pcid}/action: Resolver Requests'
      summary: Get Resolver Move return
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatureResolverMoveBody'
      responses:
        '200':
          description: OK - Move done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureResolverContextResponse'
  /mypc/{pcid}/action/resolver/skill:
    post:
      tags:
        - '/mypc/{pcid}/action: Resolver Requests'
      summary: Get Resolver Skill return
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatureResolverSkillBody'
      responses:
        '200':
          description: OK - Skill done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureResolverContextResponse'
  /mypc/{pcid}/effects:
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC Effects
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - Effects found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureEffectsResponse'
  /mypc/{pcid}/event:
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC Events
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - Events found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureEventResponse'
  /mypc/{pcid}/pa:
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC Action Points
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - PA found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreaturePaResponse'
  /mypc/{pcid}/statuses:
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC Statuses
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - Statuses found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatureStatsResponse'
  /mypc/{pcid}/stats:
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC Stats
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - Stats found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureStatusesResponse'
  /mypc/{pcid}/view:
    get:
      tags:
        - '/mypc: PC Requests (on your own PC)'
      summary: Get PC view
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          description: OK - view found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'

  /mypc/{pcid}/instance:
    put:
      tags:
        - '/mypc/{pcid}/instance: Instance Requests'
      summary: Create a fresh instance
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceCreateBody'
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '201':
          description: OK - Instance creation successed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MypcInstanceResponse'
      security:
        - access_token: []
  /mypc/{pcid}/instance/{instanceid}:
    get:
      tags:
        - '/mypc/{pcid}/instance: Instance Requests'
      summary: Get Instance Infos
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
        - in: path
          name: instanceid
          schema:
            type: integer
            example: 14
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MypcInstanceResponse'
      security:
        - access_token: []
  /mypc/{pcid}/instance/{instanceid}/leave:
    post:
      tags:
        - '/mypc/{pcid}/instance: Instance Requests'
      summary: Leave an instance
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
        - in: path
          name: instanceid
          schema:
            type: integer
            example: 14
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureProfileResponse'
      security:
        - access_token: []
  /mypc/{pcid}/instance/{instanceid}/join:
    post:
      tags:
        - '/mypc/{pcid}/instance: Instance Requests'
      summary: Join an instance
      security:
        - access_token: []
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
            example: 1
          required: true
        - in: path
          name: instanceid
          schema:
            type: integer
            example: 14
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalCreatureProfileResponse'

  /pc/{pcid}:
    get:
      tags:
        - '/pc : PC Requests (not on your own PC)'
      summary: Get PC informations
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
  /pc/name/{name}:
    get:
      tags:
        - '/pc : PC Requests (not on your own PC)'
      summary: Get PC informations
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK

  /mypc/{pcid}/item:
    get:
      tags:
        - '/item : Item Requests'
      summary: Get item list for a PC
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MypcItemResponse'

  /mypc/{pcid}/squad:
    post:
      tags:
        - '/squad : Squad Requests'
      summary: Create a squad for a PC
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/squad/{squadid}:
    get:
      tags:
        - '/squad : Squad Requests'
      summary: Get squad list for a PC
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: squadid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
    delete:
      tags:
        - '/squad : Squad Requests'
      summary: Delete a squad for a PC (Leader only)
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: squadid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/squad/{squadid}/invite/{targetid}:
    post:
      tags:
        - '/squad : Squad Requests'
      summary: Invite a PC into a squad (Leader only)
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: squadid
          schema:
            type: integer
          required: true
        - in: path
          name: targetid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/squad/{squadid}/kick/{targetid}:
    post:
      tags:
        - '/squad : Squad Requests'
      summary: Kick a PC from a squad (Leader only)
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: squadid
          schema:
            type: integer
          required: true
        - in: path
          name: targetid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/squad/{squadid}/accept:
    post:
      tags:
        - '/squad : Squad Requests'
      summary: Accept a squad invite
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: squadid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/squad/{squadid}/decline:
    post:
      tags:
        - '/squad : Squad Requests'
      summary: Decline a squad invite
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: squadid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/squad/{squadid}/leave:
    post:
      tags:
        - '/squad : Squad Requests'
      summary: Leave a squad
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: squadid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK

  /mypc/{pcid}/korp:
    post:
      tags:
        - '/korp : Korp Requests'
      summary: Create a korp for a PC
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KorpCreateBody'
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/korp/{korpid}:
    get:
      tags:
        - '/korp : Korp Requests'
      summary: Get korp list for a PC
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: korpid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
    delete:
      tags:
        - '/korp : Korp Requests'
      summary: Delete a korp for a PC (Leader only)
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: korpid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/korp/{korpid}/invite/{targetid}:
    post:
      tags:
        - '/korp : Korp Requests'
      summary: Invite a PC into a korp (Leader only)
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: korpid
          schema:
            type: integer
          required: true
        - in: path
          name: targetid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/korp/{korpid}/kick/{targetid}:
    post:
      tags:
        - '/korp : Korp Requests'
      summary: Kick a PC from a korp (Leader only)
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: korpid
          schema:
            type: integer
          required: true
        - in: path
          name: targetid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/korp/{korpid}/accept:
    post:
      tags:
        - '/korp : Korp Requests'
      summary: Accept a korp invite
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: korpid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/korp/{korpid}/decline:
    post:
      tags:
        - '/korp : Korp Requests'
      summary: Decline a korp invite
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: korpid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
  /mypc/{pcid}/korp/{korpid}/leave:
    post:
      tags:
        - '/korp : Korp Requests'
      summary: Leave a korp
      parameters:
        - in: path
          name: pcid
          schema:
            type: integer
          required: true
        - in: path
          name: korpid
          schema:
            type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK

  /meta/item/{itemtype}:
    get:
      tags:
        - '/meta : Get Meta informations'
      summary: Get item Meta informations
      parameters:
        - in: path
          name: itemtype
          schema:
            type: string
            enum: [weapon, potion, armor]
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK

components:
  schemas:
    InternalKorp:
      type: object
      properties:
        korpid:
          type: integer
          minimum: 1
          nullable: false
    InternalSquad:
      type: object
      properties:
        squadid:
          type: integer
          minimum: 1
          nullable: true

    AuthRegisterPostBody:
      type: object
      properties:
        username:
          type: string
          format: string
        password:
          type: string
          format: password
        mail:
          type: string
          format: string
    AuthLoginPostBody:
      type: object
      properties:
        username:
          type: string
          format: string
        password:
          type: string
          format: password

    PcCreateBody:
      type: object
      properties:
        class:
          type: integer
          minimum: 1
          maximum: 6
          example: 3
          nullable: false
        race:
          type: integer
          minimum: 1
          maximum: 4
          example: 4
          nullable: false
        name:
          type: string
          format: string
          nullable: false
          example: "Mÿ fàncy Sîng'0uin"
          pattern: "^[\\w ']{20}$" # regex for 20chars string
        gender:
          type: boolean
          nullable: false
        cosmetic:
          type: object
          properties:
            metaid:
              type: integer
              example: 17
            data:
              type: object
              properties:
                hasGender:
                  type: boolean
                  example: True
                beforeArmor:
                  type: boolean
                  example: False
                hideArmor:
                  type: array
                  items:
                    type: integer
                  nullable: true
        equipment:
          type: object
          properties:
            lefthand:
              type: object
              properties:
                metaid:
                  type: integer
                  example: 1
                metatype:
                  type: string
                  example: 'weapon'
            righthand:
              type: object
              properties:
                metaid:
                  type: integer
                  example: 14
                metatype:
                  type: string
                  example: 'weapon'

    MpSendPostBody:
      type: object
      properties:
        src:
          type: integer
          format: integer
        dst:
          type: array
          items:
            type: integer
        subject:
          type: string
          format: string
        body:
          type: string
          format: string

    KorpCreateBody:
      type: object
      properties:
        name:
          type: string
          format: string
          nullable: false
          example: 'My fancy Korp'
          pattern: '^.{16}$'      # regex for 16chars string

    InstanceCreateBody:
      type: object
      properties:
        hardcore:
          type: boolean
          nullable: false
          example: False
        fast:
          type: boolean
          nullable: false
          example: False
        public:
          type: boolean
          nullable: false
          example: True
        mapid:
          type: integer
          nullable: false
          example: 1
          minimum: 1

    InternalCreatureCreateBody:
      type: object
      properties:
        raceid:
          type: integer
          nullable: false
          example: 14
          minimum: 11
        gender:
          type: boolean
          nullable: false
          example: False
        rarity:
          type: string
          enum: ['Small','Medium','Big','Unique','Boss','God']
          nullable: false
          example: 'Boss'
        instanceid:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        x:
          type: integer
          nullable: false
          example: 5
        y:
          type: integer
          nullable: false
          example: 5
        m:
          type: integer
          nullable: false
          example: 60
        r:
          type: integer
          nullable: false
          example: 80
        g:
          type: integer
          nullable: false
          example: 100
        v:
          type: integer
          nullable: false
          example: 80
        p:
          type: integer
          nullable: false
          example: 90
        b:
          type: integer
          nullable: false
          example: 100

    CreatureResolverMoveBody:
      type: object
      properties:
        actor:
          type: integer
          nullable: false
          example: 14
          minimum: 1
        name:
          type: string
          nullable: false
          example: 'RegularMovesFightClass'
        params:
          type: object
          nullable: false
          example: '{}'
        type:
          type: integer
          nullable: false
          example: 3
    CreatureResolverSkillBody:
      type: object
      properties:
        actor:
          type: integer
          nullable: false
          example: 14
          minimum: 1
        name:
          type: string
          nullable: false
          example: 'WarsongActionsFightClass'
        params:
          type: object
          nullable: false
          example: '{}'
        type:
          type: integer
          nullable: false
          example: 0
    CreatureResolverContextResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            resolver:
              type: string
              example: null
              nullable: false
            context:
              type: object
              properties:
                map:
                  type: integer
                  example: 1
                  minimum: 1
                  nullable: false
                instance:
                  type: integer
                  example: 1
                  minimum: 1
                  nullable: false
                creatures:
                  type: array
                  items:
                    $ref: '#/components/schemas/PcObject'
                effects:
                  type: array
                  items:
                    $ref: '#/components/schemas/EffectObject'
                status:
                  type: array
                  items:
                    $ref: '#/components/schemas/StatusObject'
                cd:
                  type: array
                  items:
                    $ref: '#/components/schemas/CdObject'
                pa:
                  type: array
                  items:
                    $ref: '#/components/schemas/PaObject'
                fightevent:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 'fightEventname'
                      nullable: false
                    type:
                      type: integer
                      example: 0
                      minimum: 0
                      nullable: false
                    actor:
                      type: integer
                      example: 1
                      minimum: 1
                      nullable: false
                    params:
                      type: string
                      example: 'fightEventparams'
                      nullable: false
        success:
          type: boolean
          nullable: false

    CreatureActionReloadResponse:
      type: object
      properties:
        msg:
          type: string
          example: 'Reload Query OK (creature.id:{creature.id})'
          format: string
          nullable: false
        payload:
            type: object
            properties:
              red:
                type: object
                properties:
                  pa:
                    type: integer
                    nullable: false
                  ttl:
                    type: integer
                    nullable: false
                  ttnpa:
                    type: integer
                    nullable: false
              blue:
                type: object
                properties:
                  pa:
                    type: integer
                    nullable: false
                  ttl:
                    type: integer
                    nullable: false
                  ttnpa:
                    type: integer
                    nullable: false
              weapon:
                $ref: '#/components/schemas/ItemObject'
        success:
          type: boolean
          nullable: false
    CreatureActionUnloadResponse:
      type: object
      properties:
        msg:
          type: string
          example: 'Unload Query OK (creature.id:{creature.id})'
          format: string
          nullable: false
        payload:
            type: object
            properties:
              red:
                type: object
                properties:
                  pa:
                    type: integer
                    nullable: false
                  ttl:
                    type: integer
                    nullable: false
                  ttnpa:
                    type: integer
                    nullable: false
              blue:
                type: object
                properties:
                  pa:
                    type: integer
                    nullable: false
                  ttl:
                    type: integer
                    nullable: false
                  ttnpa:
                    type: integer
                    nullable: false
              weapon:
                $ref: '#/components/schemas/ItemObject'
        success:
          type: boolean
          nullable: false
    CreatureEventResponse:
      type: object
      properties:
        msg:
          type: string
          example: 'Event Query OK (creature.id:{creature.id})'
          format: string
          nullable: false
        payload:
            type: array
            items:
              $ref: '#/components/schemas/EventObject'
        success:
          type: boolean
          nullable: false
    CreaturePaResponse:
      type: object
      properties:
        msg:
          type: string
          example: 'PA Query OK (creature.id:{creature.id})'
          format: string
          nullable: false
        payload:
            $ref: '#/components/schemas/PaObject'
        success:
          type: boolean
          nullable: false
    CreatureStatsResponse:
      type: object
      properties:
        msg:
          type: string
          example: 'Stats Query OK (creature.id:{creature.id})'
          format: string
          nullable: false
        payload:
            $ref: '#/components/schemas/StatsObject'
        success:
          type: boolean
          nullable: false
    CreatureViewResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: array
          items:
            $ref: '#/components/schemas/PcObject'
        success:
          type: boolean
          nullable: false

    InternalCreatureResolverContextResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            map:
              type: integer
              example: 1
              minimum: 1
              nullable: false
            instance:
              type: integer
              example: 1
              minimum: 1
              nullable: false
            creatures:
              type: array
              items:
                $ref: '#/components/schemas/PcObject'
            effects:
              type: array
              items:
                $ref: '#/components/schemas/EffectObject'
            status:
              type: array
              items:
                $ref: '#/components/schemas/StatusObject'
            cd:
              type: array
              items:
                $ref: '#/components/schemas/CdObject'
            pa:
              type: array
              items:
                $ref: '#/components/schemas/PaObject'
        success:
          type: boolean
          nullable: false

    InternalCreatureCdResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          $ref: '#/components/schemas/CdObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureCdsResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            cds:
              type: array
              items:
                $ref: '#/components/schemas/CdObject'
            creature:
              $ref: '#/components/schemas/PcObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureEquipmentResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          nullable: true
          properties:
            creature:
              $ref: '#/components/schemas/PcObject'
            equipment:
              $ref: '#/components/schemas/EquipmentObject'
        success:
          type: boolean
          nullable: false

    InternalCreatureItemResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          nullable: true
          properties:
            creature:
              $ref: '#/components/schemas/PcObject'
            highscore:
              $ref: '#/components/schemas/HighScoreObject'
        success:
          type: boolean
          nullable: false

    InternalCreatureHighScoreResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          nullable: true
          properties:
            creature:
              $ref: '#/components/schemas/PcObject'
            equipment:
              $ref: '#/components/schemas/ItemObject'
        success:
          type: boolean
          nullable: false

    InternalCreatureEffectResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          $ref: '#/components/schemas/EffectObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureEffectsResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            effects:
              type: array
              items:
                $ref: '#/components/schemas/EffectObject'
            creature:
              $ref: '#/components/schemas/PcObject'
        success:
          type: boolean
          nullable: false
    InternalCreaturePaResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            creature:
              $ref: '#/components/schemas/PcObject'
            pa:
              $ref: '#/components/schemas/PaObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureProfileResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          $ref: '#/components/schemas/PcObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureStatsResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            creature:
              $ref: '#/components/schemas/PcObject'
            stats:
              $ref: '#/components/schemas/StatsObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureStatusResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          $ref: '#/components/schemas/StatusObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureStatusesResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            statuses:
              type: array
              items:
                $ref: '#/components/schemas/StatusObject'
            creature:
              $ref: '#/components/schemas/PcObject'
        success:
          type: boolean
          nullable: false
    InternalCreatureWalletResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          nullable: true
          properties:
            creature:
              $ref: '#/components/schemas/PcObject'
            wallet:
              $ref: '#/components/schemas/WalletObject'
        success:
          type: boolean
          nullable: false
    InternalCreaturesResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: array
          items:
            $ref: '#/components/schemas/PcObject'
        success:
          type: boolean
          nullable: false
    InternalDiscordCreatureResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            creature:
              $ref: '#/components/schemas/PcObject'
            user:
              $ref: '#/components/schemas/UserObject'
        success:
          type: boolean
          nullable: false
    InternalKorpResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            members:
              type: array
              items:
                $ref: '#/components/schemas/PcObject'
            pending:
              type: array
              items:
                $ref: '#/components/schemas/PcObject'
            korp:
              $ref: '#/components/schemas/KorpObject'
        success:
          type: boolean
          nullable: false
    InternalKorpsResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: array
          items:
            $ref: '#/components/schemas/KorpObject'
        success:
          type: boolean
          nullable: false
    InternalSquadResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            members:
              type: array
              items:
                $ref: '#/components/schemas/PcObject'
            pending:
              type: array
              items:
                $ref: '#/components/schemas/PcObject'
            squad:
              $ref: '#/components/schemas/SquadObject'
        success:
          type: boolean
          nullable: false
    InternalSquadsResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: array
          items:
            $ref: '#/components/schemas/SquadObject'
        success:
          type: boolean
          nullable: false
    InternalUserResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          $ref: '#/components/schemas/UserObject'
        success:
          type: boolean
          nullable: false
    MypcInstanceResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          $ref: '#/components/schemas/InstanceObject'
        success:
          type: boolean
          nullable: false

    MypcItemResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          properties:
            armor:
              type: array
              items:
                $ref: '#/components/schemas/ItemObject'
            cosmetic:
              type: array
              items:
                $ref: '#/components/schemas/CosmeticObject'
            equipment:
              type: object
              properties:
                date:
                  type: string
                  nullable: false
                  example: "Wed, 16 Mar 2022 15:02:12 GMT"
                feet:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                hands:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                head:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                holster:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                id:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                lefthand:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                legs:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                righthand:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                shoulders:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
                torso:
                  type: integer
                  nullable: true
                  example: 1
                  minimum: 1
              nullable: false
            wallet:
              $ref: '#/components/schemas/WalletObject'
            weapon:
              type: array
              items:
                $ref: '#/components/schemas/ItemObject'

        success:
          type: boolean
          nullable: false

    GenericResponse:
      type: object
      properties:
        msg:
          type: string
          format: string
          nullable: false
        payload:
          type: object
          nullable: true
        success:
          type: boolean
          nullable: false

    CdObject:
      type: object
      nullable: false
      properties:
        bearer:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        duration_base:
          type: integer
          nullable: false
          example: 300
          minimum: 1
        duration_left:
          type: integer
          nullable: false
        extra:
          type: object
          properties:
            extrakey:
              type: string
              nullable: true
              example: 'extravalue'
          nullable: true
        id:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        name:
          type: string
          nullable: false
        source:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        type:
          type: string
          nullable: false
          example: 'cd'

    CosmeticObject:
      type: object
      nullable: true
      properties:
        bearer:
          type: integer
          example: 1
          minimum: 1
          nullable: false
        bound:
          type: boolean
          example: true
          nullable: false
        bound_type:
          type: string
          nullable: false
        data:
          type: string
          nullable: false
        date:
          type: string
          example: "Wed, 16 Mar 2022 15:02:12 GMT"
          nullable: false
        id:
          type: integer
          example: 1
          minimum: 1
          nullable: false
        metaid:
          type: integer
          example: 4
          minimum: 1
          nullable: false
        rarity:
          type: string
          enum: ['Broken','Common','Uncommon','Rare','Epic','Legendary']
          example: 'Common'
          nullable: false
        state:
          type: integer
          example: 97
          minimum: 0
          nullable: false

    EffectObject:
      type: object
      nullable: false
      properties:
        bearer:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        duration_base:
          type: integer
          nullable: false
          example: 300
          minimum: 1
        duration_left:
          type: integer
          nullable: false
        extra:
          type: object
          properties:
            extrakey:
              type: string
              nullable: true
              example: 'extravalue'
          nullable: true
        id:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        name:
          type: string
          nullable: false
        source:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        type:
          type: string
          nullable: false
          example: 'effect'
    InstanceObject:
      type: object
      nullable: true
      properties:
        creator:
          type: integer
          nullable: false
        fast:
          type: boolean
          nullable: false
        hardcore:
          type: boolean
          nullable: false
        id:
          type: integer
          nullable: false
        map:
          type: integer
          nullable: false
        public:
          type: boolean
          nullable: false
        tick:
          type: integer
          nullable: false
    HighScoreObject:
      type: object
      nullable: true
      properties:
        action_dismantle:
          type: integer
          nullable: false
          example: 1
          minimum: 0
        action_load:
          type: integer
          nullable: false
          example: 2
          minimum: 0
        action_move:
          type: integer
          nullable: false
          example: 3
          minimum: 0
        action_reload:
          type: integer
          nullable: false
          example: 4
          minimum: 0
        action_unload:
          type: integer
          nullable: false
          example: 5
          minimum: 0
    KorpObject:
      type: object
      nullable: false
      properties:
        created:
          type: string
          nullable: false
        date:
          type: string
          nullable: false
        id:
          type: integer
          nullable: false
        leader:
          type: integer
          nullable: false
        name:
          type: string
          nullable: true

    PaObject:
      type: object
      nullable: true
      properties:
        blue:
          type: object
          properties:
            pa:
              type: integer
              nullable: false
            ttl:
              type: integer
              nullable: false
            ttnpa:
              type: integer
              nullable: false
        red:
          type: object
          properties:
            pa:
              type: integer
              nullable: false
            ttl:
              type: integer
              nullable: false
            ttnpa:
              type: integer
              nullable: false

    PcObject:
      type: object
      nullable: true
      properties:
        account:
          type: integer
          nullable: false
        date:
          type: string
          nullable: false
        gender:
          type: boolean
          nullable: false
        id:
          type: integer
          nullable: false
        instance:
          type: integer
          nullable: true
        korp:
          type: integer
          nullable: true
        korp_rank:
          type: string
          nullable: true
        level:
          type: integer
          nullable: false
        name:
          type: string
          nullable: false
        race:
          type: integer
          nullable: false
        rarity:
          type: string
          nullable: false
        squad:
          type: integer
          nullable: true
        squad_rank:
          type: string
          nullable: false
        targeted_by:
          type: integer
          nullable: true
        x:
          type: integer
          nullable: true
        xp:
          type: integer
          nullable: false
        y:
          type: integer
          nullable: true

    SquadObject:
      type: object
      nullable: false
      properties:
        created:
          type: string
          nullable: false
        date:
          type: string
          nullable: false
        id:
          type: integer
          nullable: false
        leader:
          type: integer
          nullable: false
        name:
          type: string
          nullable: true

    StatsObject:
      type: object
      nullable: true
      properties:
        base:
          type: object
          properties:
            b:
              type: integer
              nullable: false
            g:
              type: integer
              nullable: false
            m:
              type: integer
              nullable: false
            p:
              type: integer
              nullable: false
            r:
              type: integer
              nullable: false
            v:
              type: integer
              nullable: false
        def:
          type: object
          properties:
            armor:
              type: object
              properties:
                b:
                  type: integer
                  nullable: false
                p:
                  type: integer
                  nullable: false
            dodge:
              type: integer
              nullable: false
            hp:
              type: integer
              nullable: false
            hpmax:
              type: integer
              nullable: false
            parry:
              type: integer
              nullable: false
        off:
          type: object
          properties:
            capcom:
              type: integer
              nullable: false
            capsho:
              type: integer
              nullable: false

    StatusObject:
      type: object
      nullable: false
      properties:
        bearer:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        duration_base:
          type: integer
          nullable: false
          example: 300
          minimum: 1
        duration_left:
          type: integer
          nullable: false
        extra:
          type: object
          properties:
            extrakey:
              type: string
              nullable: true
              example: 'extravalue'
          nullable: true
        id:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        name:
          type: string
          nullable: false
        source:
          type: integer
          nullable: false
          example: 1
          minimum: 1
        type:
          type: string
          nullable: false
          example: 'status'
    UserObject:
      type: object
      nullable: true
      properties:
        active:
          type: boolean
          nullable: false
        created:
          type: string
          nullable: false
        d_ack:
          type: boolean
          nullable: false
        d_name:
          type: string
          nullable: false
        date:
          type: string
          nullable: false
        hash:
          type: string
          nullable: false
        id:
          type: integer
          nullable: false
        mail:
          type: string
          nullable: false
        name:
          type: string
          nullable: false

    WalletObject:
      type: object
      nullable: false
      properties:
        currency:
          $ref: '#/components/schemas/WalletCurrencyObject'
        ammo:
          $ref: '#/components/schemas/WalletAmmoObject'
        shards:
          $ref: '#/components/schemas/WalletShardsObject'

    WalletShardsObject:
      type: object
      nullable: false
      properties:
        broken:
          type: integer
          nullable: false
        common:
          type: integer
          nullable: false
        epic:
          type: integer
          nullable: false
        legendary:
          type: integer
          nullable: false
        rare:
          type: integer
          nullable: false
        uncommon:
          type: integer
          nullable: false

    WalletAmmoObject:
      type: object
      nullable: false
      properties:
        arrow:
          type: integer
          nullable: false
        bolt:
          type: integer
          nullable: false
        cal22:
          type: integer
          nullable: false
        cal223:
          type: integer
          nullable: false
        cal311:
          type: integer
          nullable: false
        cal50:
          type: integer
          nullable: false
        cal55:
          type: integer
          nullable: false
        shell:
          type: integer
          nullable: false

    WalletCurrencyObject:
      type: object
      nullable: false
      properties:
        bananas:
          type: integer
          nullable: false
        sausages:
          type: integer
          nullable: false

    EquipmentObject:
      type: object
      nullable: false
      properties:
        feet:
          $ref: '#/components/schemas/ItemObject'
        hands:
          $ref: '#/components/schemas/ItemObject'
        head:
          $ref: '#/components/schemas/ItemObject'
        holster:
          $ref: '#/components/schemas/ItemObject'
        lefthand:
          $ref: '#/components/schemas/ItemObject'
        legs:
          $ref: '#/components/schemas/ItemObject'
        righthand:
          $ref: '#/components/schemas/ItemObject'
        shoulders:
          $ref: '#/components/schemas/ItemObject'
        torso:
          $ref: '#/components/schemas/ItemObject'
    EventObject:
      type: object
      nullable: true
      properties:
        action:
          type: string
          nullable: false
        date:
          type: string
          nullable: false
          example: "Wed, 16 Mar 2022 15:02:12 GMT"
        dst:
          type: integer
          nullable: true
        id:
          type: integer
          nullable: false
        src:
          type: integer
          nullable: false
        type:
          type: string
          nullable: false
    ItemObject:
      type: object
      nullable: true
      properties:
        ammo:
          type: integer
          nullable: true
        bearer:
          type: integer
          nullable: false
        bound:
          type: boolean
          nullable: false
        bound_type:
          type: string
          nullable: false
        date:
          type: string
          nullable: false
        id:
          type: integer
          nullable: false
        metaid:
          type: integer
          nullable: false
        modded:
          type: boolean
          nullable: false
        mods:
          type: string
          nullable: true
        offsetx:
          type: integer
          nullable: true
        offsety:
          type: integer
          nullable: true
        rarity:
          type: string
          nullable: false
        state:
          type: integer
          nullable: false

  securitySchemes:
    refresh_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
    access_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
    internal_token:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - refresh_token: []
  - access_token: []
  - internal_token: []
