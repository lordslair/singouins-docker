# This workflow will install Python dependencies, run tests with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python PyTest (API)

on:
  workflow_run:
    workflows: ["Python PyTest (NoSQL)"]
    branches: [ "master" ]
    types:
      - completed

permissions:
  contents: read

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    environment:
      name: api

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest flake8
        if [ -f api/requirements.txt ]; then pip install -r api/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Start Redis
      uses: caiomarruda/redisearch-action@v1.0.1
      with:
        redis version: 2.6.0
    - name: Test with PyTest
      id: pytestext
      env:
          LOGURU_LEVEL:       ${{ secrets.SEP_LOGURU_LEVEL }}
          GUNICORN_CHDIR:     ${{ secrets.GUNICORN_CHDIR }}

          SEP_INTERNAL_TOKEN: ${{ secrets.SEP_INTERNAL_TOKEN }}
          SEP_SECRET_KEY:     ${{ secrets.SEP_SECRET_KEY }}

          SEP_SMTP_FROM:      ${{ secrets.SEP_SMTP_FROM }}
          SEP_SMTP_SERVER:    ${{ secrets.SEP_SMTP_SERVER }}
          SEP_SMTP_USER:      ${{ secrets.SEP_SMTP_USER }}
          SEP_SMTP_PASS:      ${{ secrets.SEP_SMTP_PASS }}
          SEP_SMTP_HOSTNAME:  ${{ secrets.SEP_SMTP_HOSTNAME }}
      run: |
        echo "--- Moving nosql lib where it belongs"
        cp -a nosql api/
        echo "--- Starting app in background"
        python3 api/app.py &
        echo "--- Sleep(3)"
        sleep 3
        echo "--- Starting PyTest"
        pytest api/tests/external/test_0*.py api/tests/external/test_1*.py
        echo "--- Starting PyTest (Cleaning)"
        pytest api/tests/external/test_99*.py
